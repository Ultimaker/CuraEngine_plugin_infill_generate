name: Linux Installer
run-name: ${{ inputs.plugin_conan_version }} for Linux-${{ inputs.architecture }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      plugin_conan_version:
        description: 'Plugin Conan Version'
        default: 'curaengine_plugin_infill_generate/latest@ultimaker/testing'
        required: true
        type: string
      conan_args:
        description: 'Conan args: eq.: --require-override'
        default: ''
        required: false
        type: string
      architecture:
        description: 'Architecture'
        required: true
        default: 'X64'
        type: choice
        options:
          - X64
      operating_system:
        description: 'OS'
        required: true
        default: 'ubuntu-22.04'
        type: choice
        options:
          - ubuntu-22.04
          - ubuntu-20.04
          - self-hosted-Ubuntu22-X64
  workflow_call:
    inputs:
      plugin_conan_version:
        description: 'Plugin Conan Version'
        default: 'curaengine_plugin_infill_generate/latest@ultimaker/testing'
        required: true
        type: string
      conan_args:
        description: 'Conan args: eq.: --require-override'
        default: ''
        required: false
        type: string
      architecture:
        description: 'Architecture'
        required: true
        default: 'X64'
        type: string
      operating_system:
        description: 'OS'
        required: true
        default: 'ubuntu-22.04'
        type: string

env:
  CONAN_LOGIN_USERNAME_CURA: ${{ secrets.CONAN_USER }}
  CONAN_PASSWORD_CURA: ${{ secrets.CONAN_PASS }}
  PLUGIN_CONAN_VERSION: ${{ inputs.plugin_conan_version }}

jobs:
  cura-installer-create:
    runs-on: ${{ inputs.operating_system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Cura-workflows repo
        uses: actions/checkout@v4
        with:
          repository: Ultimaker/Cura-workflows
          path: Cura-workflows

      - name: Setup Python and pip
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.11.x
          cache: pip
          cache-dependency-path: Cura-workflows/.github/workflows/requirements-runner.txt

      - name: Install Python requirements for runner
        run: pip install -r .github/workflows/requirements-conan-package.txt

      - name: Cache Conan local repository packages (Bash)
        uses: actions/cache@v3
        with:
          path: |
            $HOME/.conan/data
            $HOME/.conan/conan_download_cache
          key: conan-${{ runner.os }}-${{ runner.arch }}-installer-cache

      - name: Install Linux system requirements for building
        working-directory: Cura-workflows/runner_scripts
        run: |
          chmod +x ubuntu_setup.sh
          sudo ./ubuntu_setup.sh

      - name: Get Conan configuration
        run: |
          conan config install https://github.com/Ultimaker/conan-config.git
          conan config install https://github.com/Ultimaker/conan-config.git -a "-b runner/${{ runner.os }}/${{ runner.arch }}"

      - name: Create the default Conan profile
        run: conan profile new default --detect --force

      - name: Use Conan download cache (Bash)
        run: conan config set storage.download_cache="$HOME/.conan/conan_download_cache"

      - name: Create the Packages (Bash)
        run: conan install $PLUGIN_CONAN_VERSION ${{ inputs.conan_args }} --build=missing --update -if plugin_inst

      - name: Upload the Package(s)
        if: always()
        run: |
          conan upload "*" -r cura --all -c

      - name: Upload the binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}
          path: |
            plugin_inst/curaengine_plugin_infill_generate
          retention-days: 5

      - name: Upload the cura plugin
        uses: actions/upload-artifact@v4
        with:
          name: linux-cura-plugin
          path: |
            plugin_inst/CuraEngineTiledInfill/**/*
          retention-days: 5

      - name: Write the run info
        shell: python
        run: |
          import os
          with open("run_info.sh", "w") as f:
              f.writelines(f'echo "PLUGIN_CONAN_VERSION={os.environ["PLUGIN_CONAN_VERSION"]}" >> $GITHUB_ENV\n')

      - name: Upload the run info
        uses: actions/upload-artifact@v4
        with:
          name: linux-run-info
          path: |
            run_info.sh
          retention-days: 5

  notify-export:
    if: ${{ always() }}
    needs: [ cura-installer-create ]

    uses: ultimaker/cura-workflows/.github/workflows/slack-notify.yml@main
    with:
      success: ${{ contains(join(needs.*.result, ','), 'success') }}
      success_title: "Create the Cura distributions"
      success_body: "Installers for ${{ inputs.plugin_conan_version }}"
      failure_title: "Failed to create the Cura distributions"
      failure_body: "Failed to create at least 1 installer for ${{ inputs.plugin_conan_version }}"
    secrets: inherit
